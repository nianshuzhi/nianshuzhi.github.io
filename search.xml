<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>对程序员来说CPU是什么</title>
      <link href="/2019/10/29/%E5%AF%B9%E7%A8%8B%E5%BA%8F%E5%91%98%E6%9D%A5%E8%AF%B4CPU%E6%98%AF%E4%BB%80%E4%B9%88/"/>
      <url>/2019/10/29/%E5%AF%B9%E7%A8%8B%E5%BA%8F%E5%91%98%E6%9D%A5%E8%AF%B4CPU%E6%98%AF%E4%BB%80%E4%B9%88/</url>
      
        <content type="html"><![CDATA[<h3>一些问题</h3>1. 什么是程序？   程序是指示计算机每一步动作的一组指令。2. 程序是由什么组成？   程序是由指令和数据组成。3. 什么是机器语言？   机器语言指的是CPU能够直接识别并使用的语言4. 正在运行的程序存储在什么位置？   内存5. 什么是内存地址？   内存地址是内存中，用来表示命令和数据存储位置的数值6. 计算机的构成元件中，负责程序的解释和运行的是哪个？   CPU<h3>CPU</h3><pre><code>Central Processing Unit，即中央处理器。</code></pre><p>&emsp;&emsp;CPU的内部由寄存器，控制器，计算器和时钟四个部分构成，各部分之间由电流信号相互连通。<br>&emsp;&emsp;寄存器可以用来暂存指令，数据等处理对象。<br>&emsp;&emsp;控制器负责把内存上的指令，数据等读入寄存器，并根据指令的执行结果来控制整个计算机(数据计算之外的处理，主要是输入输出的时机控制，内存，键盘，显示器等的输入输出)。<br>&emsp;&emsp;运算器负责运算从内存读入计算器的数据。<br>&emsp;&emsp;时钟负责发出CPU开始计时的时钟信号。2GHz表示的时钟信号频率为2GHz，即20亿次/秒，时钟信号的频率越高，CPU的运行速度越快<br>&emsp;&emsp;内存指的是计算机的主存储器，简称主存。主存通过控制芯片等与CPU相连，主要负责存储指令和数据。主存由可读写的元素构成，每个字节(8位)都带有一个地址编号。CPU可以通过该地址读写主存中的指令和数据。主存中存储的指令和数据会随着计算机的关机而自动清除。<br>&emsp;&emsp;内存的存储场所通过地址编号来区分，寄存器的种类通过名字来区分。</p><h3>寄存器</h3>&emsp;&emsp;累加寄存器：一个，存储执行运算的数据和运算后的结果&emsp;&emsp;标志寄存器：一个，存储计算处理后的CPU的状态&emsp;&emsp;程序计数器：一个，存储下一条指令所在内存的地址，决定程序流程顺序&emsp;&emsp;基址寄存器：存储数据内存的起始地址&emsp;&emsp;变址寄存器：存储基址寄存器的相对地址&emsp;&emsp;通用寄存器：存储任意数据&emsp;&emsp;指令寄存器：一个，存储指令。CPU内部使用，程序员无法通过程序对该寄存器进行读写操作&emsp;&emsp;栈寄存器：一个，存储栈区域的起始地址&emsp;&emsp;程序流程分为顺序执行，条件分支，循环三种。条件分支和循环使用的是跳转指令。标志寄存器存放了累加寄存器的运算结果是负数，零还是正数，也负责存放溢出和奇偶校验的结果。&emsp;&emsp;运算结果的正零负三种状态由标记寄存器的三个位表示。第一位，第二位，第三位都为1是，分别对应表示正零负。程序中的比较指令，就是在cpu内部做减法运算。<h3>函数调用机制</h3>&emsp;&emsp;call指令：会把调用函数后要执行的指令地址存储在栈的主存内。&emsp;&emsp;return指令：会把保存在栈中的地址设定到程序计数器中。&emsp;&emsp;数组：通过基址寄存器和变址寄存器实现。CPU会把基址寄存器和变址寄存器的值得和解释为实际的内存地址，变址寄存器的值就相当于高级编程语言数组的索引<h3>CPU处理指令</h3>&emsp;&emsp;数据转送指令：寄存器和内存，内存和内存，寄存器和外围设备之间的数据读写操作。&emsp;&emsp;运算指令：用累加寄存器执行算术运算，逻辑运算，比较运算和位移运算。&emsp;&emsp;跳转指令：实现条件分支，循环，强制跳转等。&emsp;&emsp;call/return指令，函数的调用/返回调用前的地址。<h3>运行流程</h3>&emsp;&emsp;高级编程语言->机器语言->内存->计时器->控制器->寄存器->运算器(程序计数器指定执行哪条指令，标记寄存器确认正负数，基址寄存器和变址寄存器确定内存地址，栈寄存器和call，return确保函数调用后回到正确的指令顺序)]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>编码函数</title>
      <link href="/2019/10/28/%E7%BC%96%E7%A0%81%E5%87%BD%E6%95%B0/"/>
      <url>/2019/10/28/%E7%BC%96%E7%A0%81%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3>urlencode</h3><p>将字符串以URL编码</p><p>返回字符串，此字符串中除了 <code>-_.</code> 之外的所有非字母数字字符都将被替换成百分号<code>%</code>后跟两位十六进制数，空格则编码为加号<code>+</code>。</p><p>常用于URL</p><h3>base64_encode</h3><p>将data以base64编码</p><p>设计此种编码是为了使二进制数据可以通过非纯 8-bit 的传输层传输，例如电子邮件的主体。Base64-encoded 数据要比原始数据多占用 33% 左右的空间。</p><p>一般用于不得不采用GET方式传值</p><h3>htmlspecialchars</h3><p>将html标签转成html实体</p><p>某类字符在 HTML 中有特殊用处，如需保持原意，需要用 HTML 实体来表达。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>轮盘抽奖</title>
      <link href="/2019/10/28/%E8%BD%AE%E7%9B%98%E6%8A%BD%E5%A5%96/"/>
      <url>/2019/10/28/%E8%BD%AE%E7%9B%98%E6%8A%BD%E5%A5%96/</url>
      
        <content type="html"><![CDATA[<p>今天整理了下之前做过的一个轮盘抽奖功能，逻辑很简单，这里直接放上代码，不做多余的解释。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取抽中奖项</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">prizeDraw</span> <span class="params">($openId)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 奖项设置</span></span><br><span class="line">$pdConf = [</span><br><span class="line">                    <span class="number">1</span> =&gt; [</span><br><span class="line">                      <span class="string">'id'</span> =&gt; <span class="number">1</span>,</span><br><span class="line">                      <span class="string">'minAngle'</span> =&gt; <span class="number">181</span>,</span><br><span class="line">                      <span class="string">'maxAngle'</span> =&gt; <span class="number">269</span>,</span><br><span class="line">                      <span class="string">'award'</span> =&gt; <span class="string">'30元优惠券'</span>,</span><br><span class="line">                      <span class="string">'money'</span> =&gt; <span class="number">30</span>,</span><br><span class="line">                      <span class="string">'chance'</span> =&gt; <span class="number">0</span></span><br><span class="line">                    ],</span><br><span class="line">                    <span class="number">2</span> =&gt; [</span><br><span class="line">                      <span class="string">'id'</span> =&gt; <span class="number">2</span>,</span><br><span class="line">                        <span class="string">'minAngle'</span> =&gt; <span class="number">91</span>,</span><br><span class="line">                      <span class="string">'maxAngle'</span> =&gt; <span class="number">179</span>,</span><br><span class="line">                      <span class="string">'award'</span> =&gt; <span class="string">'50元优惠券'</span>,</span><br><span class="line">                      <span class="string">'money'</span> =&gt; <span class="number">50</span>,</span><br><span class="line">                      <span class="string">'chance'</span> =&gt; <span class="number">80</span></span><br><span class="line">                    ],</span><br><span class="line">                    <span class="number">3</span> =&gt; [</span><br><span class="line">                      <span class="string">'id'</span> =&gt; <span class="number">3</span>,</span><br><span class="line">                        <span class="string">'minAngle'</span> =&gt; <span class="number">1</span>,</span><br><span class="line">                      <span class="string">'maxAngle'</span> =&gt; <span class="number">89</span>,</span><br><span class="line">                      <span class="string">'award'</span> =&gt; <span class="string">'100元优惠券'</span>,</span><br><span class="line">                      <span class="string">'money'</span> =&gt; <span class="number">100</span>,</span><br><span class="line">                      <span class="string">'chance'</span> =&gt; <span class="number">17</span></span><br><span class="line">                    ],</span><br><span class="line">                    <span class="number">4</span> =&gt; [</span><br><span class="line">                      <span class="string">'id'</span> =&gt; <span class="number">4</span>,</span><br><span class="line">                      <span class="string">'minAngle'</span> =&gt; <span class="number">271</span>,</span><br><span class="line">                      <span class="string">'maxAngle'</span> =&gt; <span class="number">359</span>,</span><br><span class="line">                      <span class="string">'award'</span> =&gt; <span class="string">'299元优惠券'</span>,</span><br><span class="line">                      <span class="string">'money'</span> =&gt; <span class="number">299</span>,</span><br><span class="line">                      <span class="string">'chance'</span> =&gt; <span class="number">3</span></span><br><span class="line">                    ],</span><br><span class="line">    ];</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// ===============下面进行概率计算的逻辑===============</span></span><br><span class="line">      <span class="comment">// 获取奖项对应的概率</span></span><br><span class="line"><span class="keyword">foreach</span>($pdConf <span class="keyword">as</span> $pdConfValue) &#123;</span><br><span class="line">$getPArr[$pdConfValue[<span class="string">'id'</span>]] = $pdConfValue[<span class="string">'chance'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 求总概率</span></span><br><span class="line">$pickedTotalChance = array_sum($getPArr);</span><br><span class="line"><span class="comment">// 求出抽中的奖项id</span></span><br><span class="line"><span class="keyword">foreach</span>($getPArr <span class="keyword">as</span> $getPKey =&gt; $getPValue) &#123;</span><br><span class="line">$pickedChance = mt_rand(<span class="number">1</span>, $pickedTotalChance);</span><br><span class="line"><span class="keyword">if</span>($pickedChance &lt;= $getPValue) &#123;</span><br><span class="line">$pdResult[<span class="string">'R_Type'</span>] = $getPKey;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$pickedTotalChance -= $getPValue;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// ===============下面进行优惠码的生成逻辑===============</span></span><br><span class="line"><span class="comment">// 数据结构整理</span></span><br><span class="line">$pdResult[<span class="string">'R_OpenId'</span>] = $openId;</span><br><span class="line">$pdResult[<span class="string">'R_Award'</span>] = $pdConf[$pdResult[<span class="string">'R_Type'</span>]][<span class="string">'award'</span>];</span><br><span class="line">$pdResult[<span class="string">'R_Money'</span>] = $pdConf[$pdResult[<span class="string">'R_Type'</span>]][<span class="string">'money'</span>];</span><br><span class="line">$pdResult[<span class="string">'R_CreateAt'</span>] = time();</span><br><span class="line">$pdResult[<span class="string">'R_Expire'</span>] = time() + <span class="number">86400</span> * <span class="number">7</span>;</span><br><span class="line"><span class="comment">// 检测中奖码是否存在</span></span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">TRUE</span>) &#123;</span><br><span class="line">$pdResult[<span class="string">'R_PId'</span>] = createUuid();</span><br><span class="line">$pdPidCond[<span class="string">'R_PId'</span>] = $pdResult[<span class="string">'R_PId'</span>];</span><br><span class="line">$pdPidCount = D(<span class="string">'Raffle'</span>)-&gt;getCount($pdPidCond);</span><br><span class="line"><span class="keyword">if</span>(!$pdPidCount) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数据存储</span></span><br><span class="line">$m_getPicked = D(<span class="string">'Raffle'</span>);</span><br><span class="line">$getPResult = $m_getPicked-&gt;addOne($pdResult);</span><br><span class="line"><span class="keyword">if</span>(!$getPResult) &#123;</span><br><span class="line"><span class="keyword">self</span>::$lastError = <span class="string">'系统繁忙，请稍后再试'</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 角度值返回前端进行动态展示</span></span><br><span class="line">$minAngle = $pdConf[$pdResult[<span class="string">'R_Type'</span>]][<span class="string">'minAngle'</span>];</span><br><span class="line">$maxAngle = $pdConf[$pdResult[<span class="string">'R_Type'</span>]][<span class="string">'maxAngle'</span>];</span><br><span class="line">$pdResult[<span class="string">'R_Angle'</span>] = mt_rand($minAngle, $maxAngle);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $pdResult;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>微信公众平台授权</title>
      <link href="/2019/10/28/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%B9%B3%E5%8F%B0%E6%8E%88%E6%9D%83/"/>
      <url>/2019/10/28/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%B9%B3%E5%8F%B0%E6%8E%88%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<ol><li>关注公众账号</li><li>网页授权接口类型<ol><li>snsapi_base：只获取openid，静默获取</li><li>snap_userinfo：获取用户填写信息，需用户点击同意</li></ol></li><li>在微信公众号请求用户网页授权之前，开发者需要先到公众平台官网的开发者中心配置授权回调域名，请注意，这里填写的域名是一个字符串(test.com)，不是一个url，不要加上http://等协议头</li></ol><h4>网页授权接口步骤</h4><ol><li>用户同意授权，获取code：授权接口类型<ol><li>跳转到redirect_uri/?code=CODE&amp;state=STATE</li></ol></li><li>通过code换取网页授权access_token，区别与普通的access_token</li><li>刷新access_token(如果需要)</li><li>拉取用户信息(需scope为snsapi_userinfo)</li></ol><h4>接口示例</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curlGet</span><span class="params">($url, $refer = <span class="string">""</span>)</span> </span>&#123;</span><br><span class="line">    $ch = curl_init($url);</span><br><span class="line">    $timeout = <span class="number">30</span>;</span><br><span class="line">    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout); </span><br><span class="line">    curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="keyword">true</span>);</span><br><span class="line">    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">false</span>);</span><br><span class="line">    <span class="keyword">if</span>($refer)curl_setopt($ch, CURLOPT_REFERER, $refer);</span><br><span class="line">    </span><br><span class="line">    $returnData = curl_exec($ch);</span><br><span class="line">    curl_close($ch); </span><br><span class="line">    <span class="keyword">return</span> $returnData;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getBaseInfo</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 1. 获取code</span></span><br><span class="line">  $appid = <span class="string">'appid'</span>;</span><br><span class="line">  $redirect_uri = urlencode(<span class="string">'http://test.com/Index/getWechatCode'</span>);</span><br><span class="line">  $url = <span class="string">'https://open.weixin.qq.com/connect/oauth2/authorize?appid='</span>.$appid.<span class="string">'&amp;redirect_uri='</span>.$redirect_uri.<span class="string">'&amp;response_type=code&amp;scope=snsapi_base&amp;state=STATE#wechat_redirect'</span>;</span><br><span class="line">  header(<span class="string">'location:'</span>.$url);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUserOpenId</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  $appid = <span class="string">'appid'</span>;</span><br><span class="line">  $appsecret = <span class="string">'appsecret'</span>;</span><br><span class="line">  $code = $_GET[<span class="string">'code'</span>];</span><br><span class="line">  $url = <span class="string">'https://api.weixin.qq.com/sns/oauth2/access_token?appid='</span>.$appid.<span class="string">'&amp;secret='</span>.$appsecret.<span class="string">'&amp;code='</span>$code<span class="string">'&amp;grant_type=authorization_code'</span>;</span><br><span class="line">  <span class="comment">// 3. 拉取用户openid</span></span><br><span class="line">  $res = curlGet($url);</span><br><span class="line">  <span class="keyword">return</span> $res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUserDetail</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 1. 获取code</span></span><br><span class="line">  $appid = <span class="string">'appid'</span>;</span><br><span class="line">  $redirect_uri = urlencode(<span class="string">'http://test.com/Index/getUserInfo'</span>);</span><br><span class="line">  $url = <span class="string">'https://open.weixin.qq.com/connect/oauth2/authorize?appid='</span>.$appid.<span class="string">'&amp;redirect_uri='</span>.$redirect_uri.<span class="string">'&amp;response_type=code&amp;scope=snsapi_userinfo&amp;state=STATE#wechat_redirect'</span>;</span><br><span class="line">  header(<span class="string">'location:'</span>.$url);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUserInfo</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 2. 获取网页授权access_token</span></span><br><span class="line">  $appid = <span class="string">'appid'</span>;</span><br><span class="line">  $appsecret = <span class="string">'appsecret'</span>;</span><br><span class="line">  $code = $_GET[<span class="string">'code'</span>];</span><br><span class="line">  $url = <span class="string">'https://api.weixin.qq.com/sns/oauth2/access_token?appid='</span>.$appid.<span class="string">'&amp;secret='</span>.$appsecret.<span class="string">'&amp;code='</span>$code<span class="string">'&amp;grant_type=authorization_code'</span>;</span><br><span class="line">  $res = <span class="keyword">$this</span>-&gt;http_curl($url, <span class="string">'get'</span>);</span><br><span class="line">  $openid = $res[<span class="string">'openid'</span>];</span><br><span class="line">  $access_token = $res[<span class="string">'access_token'</span>];</span><br><span class="line">  <span class="comment">// 3. 拉取用户的详细信息</span></span><br><span class="line">  $infoUrl = <span class="string">'https://api.weixin.qq.com/sns/userinfo?access_token='</span>.$access_token.<span class="string">'&amp;openid='</span>.$openid.<span class="string">'&amp;lang=zh_CN'</span>;</span><br><span class="line">  $res = curlGet($infoUrl);</span><br><span class="line">  <span class="keyword">return</span> $res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>微信公众号开发之群发消息</title>
      <link href="/2019/10/28/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91%E4%B9%8B%E7%BE%A4%E5%8F%91%E6%B6%88%E6%81%AF/"/>
      <url>/2019/10/28/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91%E4%B9%8B%E7%BE%A4%E5%8F%91%E6%B6%88%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<p>微信公众号开发，很多地方都需要去指定的微信地址获取相关的数据，类似access_token、openid等。而微信开发者文档只提供了对应的链接地址、请求的方式、对应的参数和返回的数据类型。所以我们需要使用curl来模拟http请求，获取对应的数据。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// curl模拟请求</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">httpCurl</span> <span class="params">($url, $method = <span class="string">'get'</span>, $data)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 初始化</span></span><br><span class="line">  $curl = curl_init();</span><br><span class="line">　<span class="comment">// 需要获取的url</span></span><br><span class="line">　curl_setopt($curl, CURLOPT_URL, $url);</span><br><span class="line">  <span class="comment">// 将获取的信息已字符串的形式返回</span></span><br><span class="line">　curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class="keyword">TRUE</span>);</span><br><span class="line">  <span class="comment">// 启用时,将头文件作为数据流输出</span></span><br><span class="line">　curl_setopt($curl, CURLOPT_HEADER, <span class="keyword">FALSE</span>);</span><br><span class="line">  <span class="comment">// post处理</span></span><br><span class="line">  <span class="keyword">if</span> ($method == <span class="string">'post'</span>) &#123;</span><br><span class="line">    <span class="comment">// 开启post请求</span></span><br><span class="line">    curl_setopt($curl, CURLOPT_POST, <span class="keyword">TRUE</span>);</span><br><span class="line">    <span class="comment">// 设置post数据</span></span><br><span class="line">    curl_setopt($curl, CURLOPT_POSTFIELDS, $data);</span><br><span class="line">  &#125;</span><br><span class="line">　<span class="comment">// 执行并获取url返回内容</span></span><br><span class="line">　$data = curl_exec($curl);</span><br><span class="line">　<span class="comment">// 释放curl句柄</span></span><br><span class="line">　curl_close($curl);</span><br><span class="line">　<span class="comment">// 返回得到的数据</span></span><br><span class="line">  <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取access_token</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getWechatAccessToken</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  $appid = <span class="string">'wx5bad1eb596eab55a'</span>;</span><br><span class="line">  $secret = <span class="string">'bdc68728bbdd1110c48681f7a47e8ed1'</span>;</span><br><span class="line">  $url = <span class="string">'https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid='</span>.$appid.<span class="string">'&amp;secret='</span>.$secret;</span><br><span class="line">  $returnJson = httpCurl($url, <span class="string">'get'</span>);</span><br><span class="line">  $returnArr = json_decode($returnJson);</span><br><span class="line">  $accessToken = $returnArr[<span class="string">'access_token'</span>];</span><br><span class="line">  <span class="keyword">return</span> $returnData;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送群发消息</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendMsgAll</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 获取全局access_token</span></span><br><span class="line">  $access_token = getWechatAccessToken();</span><br><span class="line">  $url = <span class="string">'https://api.weixin.qq.com/cgi-bin/message/mass/preview?access_token='</span>.$access_token;</span><br><span class="line">  <span class="comment">// 组装群发接口数据array</span></span><br><span class="line">  $msgArr = [</span><br><span class="line">    <span class="string">'touser'</span> =&gt; <span class="string">'openid'</span>,</span><br><span class="line">    <span class="string">'text'</span> =&gt; [</span><br><span class="line">        <span class="string">'content'</span> =&gt; <span class="string">'It is a test.'</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">'msgtype'</span> =&gt; <span class="string">'text'</span>,</span><br><span class="line">  ];</span><br><span class="line">  <span class="comment">// 将array转成json</span></span><br><span class="line">  $msgJson = json_encode($msgArr);</span><br><span class="line">  <span class="comment">// 调用curl</span></span><br><span class="line">  $postRes = httpCurl($url, <span class="string">'post'</span>, $msgJson);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>微信公众号开发 — 事件推送</title>
      <link href="/2019/10/28/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91%E4%B9%8B%E4%BA%8B%E4%BB%B6%E6%8E%A8%E9%80%81/"/>
      <url>/2019/10/28/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91%E4%B9%8B%E4%BA%8B%E4%BB%B6%E6%8E%A8%E9%80%81/</url>
      
        <content type="html"><![CDATA[<h4>什么是事件推送？</h4><p>事件推送就是微信主动推送消息到我们的url地址上</p><h4>验证微信发送Token的Url</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkWechatUrl</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 获取参数</span></span><br><span class="line">    $nonce = $_GET[<span class="string">'nonce'</span>];</span><br><span class="line">    $token = <span class="string">'test'</span>;</span><br><span class="line">    $timestamp = $_GET[<span class="string">'timestamp'</span>];</span><br><span class="line">    $echostr = $_GET[<span class="string">'echostr'</span>];</span><br><span class="line">  $signature = $_GET[<span class="string">'signature'</span>];</span><br><span class="line">    <span class="comment">// 形成数组</span></span><br><span class="line">    $array = [];</span><br><span class="line">    $array = [$nonce, $timestamp, $token];</span><br><span class="line">  <span class="comment">// 按字典排序</span></span><br><span class="line">    sort($array);</span><br><span class="line">    <span class="comment">// 拼接成字符串</span></span><br><span class="line">    $str = sha1(implode($array));</span><br><span class="line">  <span class="comment">// signature校验</span></span><br><span class="line">    <span class="keyword">if</span> ($str == $signature &amp;&amp; $echostr) &#123;</span><br><span class="line">        <span class="keyword">echo</span> $echostr;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        reponseMsg();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4>响应事件推送</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reponseMsg</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 获取微信POST的XML数据</span></span><br><span class="line">    $postArr = $GLOBALS[<span class="string">'HTTP_RAW_POST_DATA'</span>];</span><br><span class="line">  <span class="comment">// 处理消息类型 设置回复类型和内容</span></span><br><span class="line">  $postObj = simplexml_load_string($postArr);</span><br><span class="line">  <span class="keyword">if</span> (strtolower($postObj-&gt;MsgType) == <span class="string">'event'</span>) &#123;</span><br><span class="line">        <span class="comment">// 关注事件</span></span><br><span class="line">      <span class="keyword">if</span> (strtolower($postObj-&gt;Event) == <span class="string">'subscribe'</span>) &#123;</span><br><span class="line">            $toUser = $postObj-&gt;FromUserName;</span><br><span class="line">          $fromUser = $postObj-&gt;ToUserName;</span><br><span class="line">          $createTime = time();</span><br><span class="line">          $msgType = <span class="string">'text'</span>;</span><br><span class="line">          $content = <span class="string">'welcome!'</span>;</span><br><span class="line">          $template = <span class="string">'&lt;xml&gt;</span></span><br><span class="line"><span class="string">                         &lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;</span></span><br><span class="line"><span class="string">                         &lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;</span></span><br><span class="line"><span class="string">                         &lt;CreateTime&gt;%s&lt;/CreateTime&gt;</span></span><br><span class="line"><span class="string">                         &lt;MsgType&gt;&lt;![CDATA[%s]]&gt;&lt;/MsgType&gt;</span></span><br><span class="line"><span class="string">                         &lt;Content&gt;&lt;![CDATA[%s]]&gt;&lt;/Content&gt;</span></span><br><span class="line"><span class="string">                         &lt;/xml&gt;'</span>;</span><br><span class="line">          <span class="comment">// sprintf -- 用对应的数据替换模板中的对应参数</span></span><br><span class="line">          <span class="keyword">echo</span> sprintf($template, $toUser, $fromUser, $createTime, $msgType, $content);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4>消息回复</h4><p>纯文本</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xml</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ToUserName</span>&gt;</span>&lt;![CDATA[toUser]]&gt;<span class="tag">&lt;/<span class="name">ToUserName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FromUserName</span>&gt;</span>&lt;![CDATA[fromUser]]&gt;<span class="tag">&lt;/<span class="name">FromUserName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">CreateTime</span>&gt;</span>12345678<span class="tag">&lt;/<span class="name">CreateTime</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MsgType</span>&gt;</span>&lt;![CDATA[text]]&gt;<span class="tag">&lt;/<span class="name">MsgType</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Content</span>&gt;</span>&lt;![CDATA[你好]]&gt;<span class="tag">&lt;/<span class="name">Content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xml</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reponseTextMsg</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 获取微信POST的XML数据</span></span><br><span class="line">    $postArr = $GLOBALS[<span class="string">'HTTP_RAW_POST_DATA'</span>];</span><br><span class="line">  <span class="comment">// 处理消息类型 设置回复类型和内容</span></span><br><span class="line">  $postObj = simplexml_load_string($postArr);</span><br><span class="line">  <span class="keyword">if</span> (strtolower($postObj-&gt;MsgType) == <span class="string">'text'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (strtolower($postObj-&gt;Content) == <span class="string">'test'</span>) &#123;</span><br><span class="line">            $toUser = $postObj-&gt;FromUserName;</span><br><span class="line">            $fromUser = $postObj-&gt;ToUserName;</span><br><span class="line">            $createTime = time();</span><br><span class="line">            $msgType = <span class="string">'text'</span>;</span><br><span class="line">            <span class="comment">// 回复链接</span></span><br><span class="line">            $content = <span class="string">"&lt;a href='www.baidu.com'&gt;百度&lt;/a&gt;"</span>;</span><br><span class="line">            $template = <span class="string">'&lt;xml&gt;</span></span><br><span class="line"><span class="string">                        &lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;</span></span><br><span class="line"><span class="string">                        &lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;</span></span><br><span class="line"><span class="string">                        &lt;CreateTime&gt;%s&lt;/CreateTime&gt;</span></span><br><span class="line"><span class="string">                        &lt;MsgType&gt;&lt;![CDATA[%s]]&gt;&lt;/MsgType&gt;</span></span><br><span class="line"><span class="string">                        &lt;Content&gt;&lt;![CDATA[%s]]&gt;&lt;/Content&gt;</span></span><br><span class="line"><span class="string">                        &lt;/xml&gt;'</span>;</span><br><span class="line">            <span class="keyword">echo</span> sprintf($template, $toUser, $fromUser, $createTime, $msgType, $content);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>图文</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xml</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ToUserName</span>&gt;</span>&lt;![CDATA[toUser]]&gt;<span class="tag">&lt;/<span class="name">ToUserName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FromUserName</span>&gt;</span>&lt;![CDATA[fromUser]]&gt;<span class="tag">&lt;/<span class="name">FromUserName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">CreateTime</span>&gt;</span>12345678<span class="tag">&lt;/<span class="name">CreateTime</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MsgType</span>&gt;</span>&lt;![CDATA[news]]&gt;<span class="tag">&lt;/<span class="name">MsgType</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ArticleCount</span>&gt;</span>2<span class="tag">&lt;/<span class="name">ArticleCount</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Articles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Title</span>&gt;</span>&lt;![CDATA[title1]]&gt;<span class="tag">&lt;/<span class="name">Title</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">Description</span>&gt;</span>&lt;![CDATA[description1]]&gt;<span class="tag">&lt;/<span class="name">Description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">PicUrl</span>&gt;</span>&lt;![CDATA[picurl]]&gt;<span class="tag">&lt;/<span class="name">PicUrl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Url</span>&gt;</span>&lt;![CDATA[url]]&gt;<span class="tag">&lt;/<span class="name">Url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Title</span>&gt;</span>&lt;![CDATA[title]]&gt;<span class="tag">&lt;/<span class="name">Title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Description</span>&gt;</span>&lt;![CDATA[description]]&gt;<span class="tag">&lt;/<span class="name">Description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">PicUrl</span>&gt;</span>&lt;![CDATA[picurl]]&gt;<span class="tag">&lt;/<span class="name">PicUrl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Url</span>&gt;</span>&lt;![CDATA[url]]&gt;<span class="tag">&lt;/<span class="name">Url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Articles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xml</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reponseGraphicMsg</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 获取微信POST的XML数据</span></span><br><span class="line">    $postArr = $GLOBALS[<span class="string">'HTTP_RAW_POST_DATA'</span>];</span><br><span class="line">  <span class="comment">// 处理消息类型 设置回复类型和内容</span></span><br><span class="line">  $postObj = simplexml_load_string($postArr);</span><br><span class="line">  <span class="keyword">if</span> (strtolower($postObj-&gt;MsgType) == <span class="string">'text'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (strtolower($postObj-&gt;Content) == <span class="string">'tu'</span>) &#123;</span><br><span class="line">            $toUser = $postObj-&gt;FromUserName;</span><br><span class="line">            $fromUser = $postObj-&gt;ToUserName;</span><br><span class="line">            $createTime = time();</span><br><span class="line">            $msgType = <span class="string">'news'</span>;</span><br><span class="line">            $arr = [</span><br><span class="line">                        [</span><br><span class="line">                            <span class="string">'title'</span> =&gt; <span class="string">'测试1'</span>,</span><br><span class="line">                            <span class="string">'description'</span> =&gt; <span class="string">'描述1'</span>,</span><br><span class="line">                            <span class="string">'picurl'</span> =&gt; <span class="string">'https://ss0.bdstatic.com/5aV1bjqh_Q23odCf/static/superman/img/logo/  logo_white_fe6da1ec.png'</span>,</span><br><span class="line">                            <span class="string">'url'</span> =&gt; <span class="string">'www.baidu.com'</span>,</span><br><span class="line">                        ],</span><br><span class="line">                        [</span><br><span class="line">                            <span class="string">'title'</span> =&gt; <span class="string">'测试2'</span>,</span><br><span class="line">                            <span class="string">'description'</span> =&gt; <span class="string">'描述2'</span>,</span><br><span class="line">                            <span class="string">'picurl'</span> =&gt; <span class="string">'https://ss0.bdstatic.com/5aV1bjqh_Q23odCf/static/superman/img/logo/  logo_white_fe6da1ec.png'</span>,</span><br><span class="line">                            <span class="string">'url'</span> =&gt; <span class="string">'www.baidu.com'</span>,</span><br><span class="line">                        ],</span><br><span class="line">              ];</span><br><span class="line">            $template = <span class="string">'&lt;xml&gt;</span></span><br><span class="line"><span class="string">                         &lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;</span></span><br><span class="line"><span class="string">                         &lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;</span></span><br><span class="line"><span class="string">                         &lt;CreateTime&gt;%s&lt;/CreateTime&gt;</span></span><br><span class="line"><span class="string">                         &lt;MsgType&gt;&lt;![CDATA[%s]]&gt;&lt;/MsgType&gt;</span></span><br><span class="line"><span class="string">                         &lt;ArticleCount&gt;'</span>.count($arr).<span class="string">'&lt;/ArticleCount&gt;</span></span><br><span class="line"><span class="string">                         &lt;Articles&gt;'</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $_val) &#123;</span><br><span class="line">        $template .= <span class="string">'&lt;item&gt;</span></span><br><span class="line"><span class="string">                              &lt;Title&gt;&lt;![CDATA['</span>.$_val[<span class="string">'title'</span>].<span class="string">']]&gt;&lt;/Title&gt; </span></span><br><span class="line"><span class="string">                              &lt;Description&gt;&lt;![CDATA['</span>.$_val[<span class="string">'description'</span>].<span class="string">']]&gt;&lt;/Description&gt;</span></span><br><span class="line"><span class="string">                              &lt;PicUrl&gt;&lt;![CDATA['</span>.$_val[<span class="string">'picurl'</span>].<span class="string">']]&gt;&lt;/PicUrl&gt;</span></span><br><span class="line"><span class="string">                              &lt;Url&gt;&lt;![CDATA['</span>.$_val[<span class="string">'url'</span>].<span class="string">']]&gt;&lt;/Url&gt;</span></span><br><span class="line"><span class="string">                              &lt;/item&gt;'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">                </span><br><span class="line">             $template .= <span class="string">'&lt;/Articles&gt;</span></span><br><span class="line"><span class="string">                           &lt;/xml&gt;'</span>;</span><br><span class="line">            <span class="keyword">echo</span> sprintf($template, $toUser, $fromUser, $createTime, $msgType);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Homebrew下安装memcached扩展</title>
      <link href="/2019/10/28/php%E5%AE%89%E8%A3%85memcached/"/>
      <url>/2019/10/28/php%E5%AE%89%E8%A3%85memcached/</url>
      
        <content type="html"><![CDATA[<p>之前装过几次memcached扩展，但流程记忆不深。加上windows系统和ios系统也有所差别，而百度上搜索的结果太过混乱，现列出安装命令如下：</p><ol><li><p>安装homebrew</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e <span class="string">"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"</span></span><br></pre></td></tr></table></figure></li><li><p>查询memcached扩展</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew search memcached</span><br></pre></td></tr></table></figure></li><li><p>安装memcached客户端库</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install libmemcached</span><br></pre></td></tr></table></figure></li><li><p>安装PHP版本对应的扩展，开启sasl功能</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install homebrew/php/php56-memcached --with-sasl</span><br></pre></td></tr></table></figure></li><li><p>在php.ini文件中配置memcached位置</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[memcached] </span><br><span class="line">extension = <span class="string">"/usr/local/Cellar/php56-memcached/2.2.0_3/memcached.so"</span></span><br></pre></td></tr></table></figure></li><li><p>重启Apache服务</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apachectl restart</span><br></pre></td></tr></table></figure></li><li><p>结束</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>加密简单介绍</title>
      <link href="/2019/10/28/%E5%8A%A0%E5%AF%86%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/"/>
      <url>/2019/10/28/%E5%8A%A0%E5%AF%86%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h4>单项散列加密技术介绍：</h4><p>单项散列加密是指通过对不同输入长度的信息进行散列计算，得到固定长度的输出，这个散列计算过程是单向的，即不能对固定长度的输出进行计算从而获得输入信息</p><p>####对称加密技术介绍：</p><p>对称加密是指加密和解密使用的密钥是同一个密钥或者可以互相推算</p><p>####非对称加密技术介绍：</p><p>非对称加密和解密使用的密钥不是同一个密钥，其中一个对外公开，被称作公钥，另一个只有所有人知道</p><p>附：</p><h4>1. crypt函数</h4><p>crypt() 函数返回使用 DES、Blowfish 或 MD5 算法加密的字符串。</p><p>在不同的操作系统上，该函数的行为不同，某些操作系统支持一种以上的算法类型。在安装时，PHP 会检查什么算法可用以及使用什么算法。</p><p>具体的算法依赖于 salt 参数的格式和长度。通过增加由使用特定加密方法的特定字符串所生成的字符串数量，salt 可以使加密更安全。</p><p>在该函数支持多种算法的系统上，如果支持上述常量则设置为 “1”，否则设置为 “0”。</p><p>语法：</p><p>string crypt(string $str[,string $salt]),</p><p>返回一个基于标准UNIX DES算法或系统上其它可用的替代算法的散列字符串</p><p>$str:需要加密的铭文</p><p>$salt:加密时的干扰串，使编码更安全</p><p>注意：如果加密时没有加上这个$salt参数，将随机生成一个干扰串，否则刷新加密密文不变</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> crypt(<span class="string">'test'</span>); <span class="comment">// $1$ClrbIrcQ$3lL/6iyaqpKS8cSk5HnXH.</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> crypt(<span class="string">'test'</span>, <span class="string">'salt'</span>); <span class="comment">// salSp1wOPp6fk</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Notice: crypt(): No salt parameter was specified. You must use a randomly generated salt and a strong hash function to produce a secure hash.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">if</span> (CRYPT_STD_DES) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'标准 DES 算法'</span>;</span><br><span class="line">&#125; <span class="keyword">elseif</span> (CRYPT_MD5) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'MD5 散列'</span>;</span><br><span class="line">&#125; <span class="keyword">elseif</span> (CRYPT_BLOWFISH) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Blowfish 算法'</span>;</span><br><span class="line">&#125; <span class="keyword">elseif</span> (CRYPT_SHA256) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'SHA-256 算法'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4>2. Sha1函数</h4><p>语法：</p><p>$string sha1(string $str[,bool $raw_output=false]);</p><p>返回sha1散列值字符串</p><p>$str:加密的字符串</p><p>$raw_output:如果可选的raw_output参数被设置成TRUE，那么sha1摘要将以20字符串长度的原始格式返回，否则返回值是一个40字符串长度的十六进制数字</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> sha1(<span class="string">'test'</span>); <span class="comment">// a94a8fe5ccb19ba61c4c0873d391e987982fbbd3</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> sha1(<span class="string">'test'</span>, <span class="keyword">true</span>); <span class="comment">// �J��̱��Lsӑ釘/��</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP数据返回到客户端函数</title>
      <link href="/2019/10/28/ajaxReturn%E5%92%8CsendAjax/"/>
      <url>/2019/10/28/ajaxReturn%E5%92%8CsendAjax/</url>
      
        <content type="html"><![CDATA[<p>ajaxReturn函数(此函数为Thinkphp内置的函数，现在我们经常用的是JSON格式)：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajaxReturn</span> <span class="params">($data, $type = <span class="string">''</span>, $json_option = <span class="number">0</span>)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">empty</span>($type)) $type = C(<span class="string">'DEFAULT_AJAX_RETURN'</span>);</span><br><span class="line">  <span class="keyword">switch</span> (strtoupper($type))&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'JSON'</span>:</span><br><span class="line">      <span class="comment">// 返回JSON数据格式到客户端 -- 包含状态信息</span></span><br><span class="line">      header(<span class="string">'Content-Type:application/json; charset=utf-8'</span>);</span><br><span class="line">      <span class="keyword">exit</span>(json_encode($data, $json_option));</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'XML'</span>:</span><br><span class="line">      <span class="comment">// 返回xml格式数据</span></span><br><span class="line">      header(<span class="string">'Content-Type:text/xml; charset=utf-8'</span>);</span><br><span class="line">      <span class="keyword">exit</span>(xml_encode($data));</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'JSONP'</span>:</span><br><span class="line">      <span class="comment">// 返回JSON数据格式到客户端 -- 包含状态信息</span></span><br><span class="line">      header(<span class="string">'Content-Type:application/json; charset=utf-8'</span>);</span><br><span class="line">      $handler = <span class="keyword">isset</span>($_GET[C(<span class="string">'VAR_JSONP_HANDLER'</span>)])?$_GET[C(<span class="string">'VAR_JSONP_HANDLER'</span>)]:C(<span class="string">'DEFAULT_JSONP_HANDLER'</span>);</span><br><span class="line">      <span class="keyword">exit</span>($handler.<span class="string">'('</span>.json_encode($data,$json_option).<span class="string">');'</span>);  </span><br><span class="line">    <span class="keyword">case</span> <span class="string">'EVAL'</span>:</span><br><span class="line">      <span class="comment">// 返回可执行的js脚本</span></span><br><span class="line">      header(<span class="string">'Content-Type:text/html; charset=utf-8'</span>);</span><br><span class="line">      <span class="keyword">exit</span>($data);</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="comment">// 用于扩展其他返回格式数据</span></span><br><span class="line">      Hook::listen(<span class="string">'ajax_return'</span>,$data);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sendAjax函数(修改自ajaxReturn，添加了自定义的参数返回)：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendAjax</span> <span class="params">($status, $info = NULL, $msg = NULL)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// func_num_args() -- 返回函数的实参个数</span></span><br><span class="line">  <span class="keyword">switch</span> (func_num_args()) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      <span class="keyword">$this</span>-&gt;ajaxReturn($status);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      $returnData[<span class="string">'error'</span>] = $status;</span><br><span class="line">      $returnData[<span class="string">'biz'</span>] = $info;</span><br><span class="line">      <span class="keyword">$this</span>-&gt;ajaxReturn($returnData);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">      $returnData[<span class="string">'error'</span>] = $status;</span><br><span class="line">      $returnData[<span class="string">'biz'</span>] = $info;</span><br><span class="line">      $returnData[<span class="string">'msg'</span>] = $msg;</span><br><span class="line">      <span class="keyword">$this</span>-&gt;ajaxReturn($returnData);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Web安全之CSRF攻击</title>
      <link href="/2019/10/28/Web%E5%AE%89%E5%85%A8%E4%B9%8BCSRF%E6%94%BB%E5%87%BB/"/>
      <url>/2019/10/28/Web%E5%AE%89%E5%85%A8%E4%B9%8BCSRF%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<p><strong>什么是CSRF攻击？</strong><br>​        CSRF全称为Cross Site Request Forgery，中文意思是跨站点请求伪造，是攻击者通过伪装受信任的用户，来向网站发起请求的一种恶意攻击</p><p><strong>如何进行CSRF攻击？</strong></p><p>​    首先，我们要知道绝大部分破坏力强的CSRF攻击离不开对Cookie的利用。</p><p>​    然后，浏览器的Cookie分为两种：一种是Session Cookie，也叫临时Cookie；另一种是Third-party Cookie，也叫本地Cookie。两者的区别在于Cookie的失效时间。Session Cookie在浏览器关闭后，Session Cookie便马上失效。而Third-party Cookie在Set-Cookie的时候，指定了Expire时间，只有到Expire时间后，Third-party Cookie才会失效。</p><p>​    显然，对于攻击者来说，Third-party Cookie比Session Cookie更加容易利用，从而进行CSRF攻击。因为Third-party Cooike的有效时间更长，用户访问某个网站后，获取Third-party Cookie，那么在Cookie过期失效前，用户都有遭受CSRF攻击的风险。而Session Cookie一般是存放在浏览器的内存中，浏览器关闭就会自动失效。攻击者要想利用Session Cookie进行攻击的话，还要先诱使用户访问目标网站，写入有效的Session，才能进行下一步的攻击。</p><p><strong>浏览器Cookie？</strong></p><p>​    什么是第三方Cookie？来自在网页上嵌入广告或图片等项的其他域来源设置的Cookie</p><p>​    什么是第一方Cookie？由地址栏中列出的网站域设置的 Cookie</p><p>​    因为第三方Cookie容易被黑客利用，所以一些浏览器会拦截第三方Cookie的发送。这在某种程度上加大了CSRF攻击的难度。然而P3P Header又是浏览器可以发送第三方Cookie了。</p><p>​    注：P3P Header是W3C制定的关于隐私的标准</p><p>​    如果在Set-Cookie的时候加上P3P头，那即使浏览器禁止发送第三方Cookie，第三方Cookie也会被发送。因此，对与CSRF的防御不能仅仅依赖浏览器对第三方Cookie的拦截。</p><p><strong>CSRF的防御</strong></p><ol><li><p>验证码</p><p>CSRF攻击是伪造用户身份，自动发起恶意的请求。所以只要强迫攻击者对我们的网站进行交互，通过验证码的校验，可以抵御一部分CSRF攻击。但是加入验证码会影响用户的体验，所以加入验证码这个方法不能作为主要的防御手段。</p></li><li><p>Anti CSRF Token</p><p>CSRF攻击的原理，是伪造用户身份，发起恶意请求。那么攻击者除了要伪装成功，还需要猜出请求的参数。那么如果在请求中，加入一个随机的Token，攻击者就没办法猜出恶意请求的参数了，这就是Anti CSRF Token。Token参数最好放在一个表单中，而不是放在URL里面。因为攻击者可以在当前页面植入恶意的脚本，将当前页面的URL会作为HTTP请求的Reffer，发送到对方服务器上。因此，最好把Token放在表单中，把敏感操作由GET改成POST，这样可以增加黑客CSRF攻击的难度。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP跨域设置</title>
      <link href="/2019/10/28/PHP%E8%B7%A8%E5%9F%9F%E8%AE%BE%E7%BD%AE/"/>
      <url>/2019/10/28/PHP%E8%B7%A8%E5%9F%9F%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>以下为常用的跨域配置，有一点要注意的是，Credentials配置前的Origin不能是*。</p><p>单个地址跨域：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">'Access-Control-Allow-Origin: http://www.baidu.com'</span>);</span><br></pre></td></tr></table></figure><p>多个地址跨域：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$origin = <span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_ORIGIN'</span>])?$_SERVER[<span class="string">'HTTP_ORIGIN'</span>]:<span class="string">''</span>;</span><br><span class="line">$allow_origin = [</span><br><span class="line">  <span class="string">'http://www.nianshuzhi.com'</span>,</span><br><span class="line">  <span class="string">'http://www.baidu.com'</span>,</span><br><span class="line">];</span><br><span class="line"><span class="keyword">if</span>(in_array($origin, $allow_origin))&#123;  </span><br><span class="line">    header(<span class="string">'Access-Control-Allow-Origin: '</span>.$origin);       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所有地址跨域：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">'Access-Control-Allow-Origin: *'</span>);</span><br></pre></td></tr></table></figure><p>操作Cookie：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">'Access-Control-Allow-Credentials: true'</span>);</span><br></pre></td></tr></table></figure><p>限制访问方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">'Access-Control-Allow-Methods: POST,GET,OPTIONS'</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP断点续传</title>
      <link href="/2019/10/28/PHP%E6%96%AD%E7%82%B9%E7%BB%AD%E4%BC%A0/"/>
      <url>/2019/10/28/PHP%E6%96%AD%E7%82%B9%E7%BB%AD%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h4>原理</h4><p>断点续传主要是HTTP协议中的Content-Range报头。其理解如下：</p><p>Content-Range：响应资源的范围。可以在多次请求中标记请求的资源范围，在连接断开重新连接时，客户端只请求该资源未被下载的部分，而不是重新请求整个资源，实现了断点续传。迅雷就是基于这个原理，使用多线程分段读取网络上的资源，最后合并。</p><h4>代码实现</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getContentRange</span> <span class="params">($fileSize)</span> </span>&#123;</span><br><span class="line">  $range = <span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_RANGE'</span>])?$_SERVER[<span class="string">'HTTP_RANGE'</span>]:<span class="keyword">NULL</span>;  </span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($range)) &#123;  </span><br><span class="line">         $range = preg_replace(<span class="string">'/[\s|,].*/'</span>, <span class="string">''</span>, $range);  </span><br><span class="line">         $range = explode(<span class="string">'-'</span>, substr($range, <span class="number">6</span>));  </span><br><span class="line">         <span class="keyword">if</span> (count($range) &lt; <span class="number">2</span>) &#123;  </span><br><span class="line">             $range[<span class="number">1</span>] = $fileSize;  </span><br><span class="line">         &#125;  </span><br><span class="line">         $range = array_combine([<span class="string">'start'</span>,<span class="string">'end'</span>], $range);  </span><br><span class="line">         <span class="keyword">if</span> (<span class="keyword">empty</span>($range[<span class="string">'start'</span>])) &#123;  </span><br><span class="line">             $range[<span class="string">'start'</span>] = <span class="number">0</span>;  </span><br><span class="line">         &#125;  </span><br><span class="line">         <span class="keyword">if</span> (!<span class="keyword">isset</span>($range[<span class="string">'end'</span>]) || <span class="keyword">empty</span>($range[<span class="string">'end'</span>])) &#123;  </span><br><span class="line">             $range[<span class="string">'end'</span>] = $fileSize;  </span><br><span class="line">         &#125;  </span><br><span class="line">         <span class="keyword">return</span> $range;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">NULL</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP创建ZIP压缩文件</title>
      <link href="/2019/10/28/PHP%E5%88%9B%E5%BB%BAZIP%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6/"/>
      <url>/2019/10/28/PHP%E5%88%9B%E5%BB%BAZIP%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h4>涉及的类库</h4><p>ZipArchive</p><h4>示例代码</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createZip</span><span class="params">($fileArr = [], $name = <span class="string">''</span>, $overWrite = FALSE)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 初始化数组</span></span><br><span class="line">    $validFiles = [];</span><br><span class="line">  <span class="comment">// 如果文件存在且不需覆盖</span></span><br><span class="line">  <span class="keyword">if</span>(file_exists($destination) &amp;&amp; !$overWrite) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span>(is_array($fileArr)) &#123;</span><br><span class="line">      <span class="keyword">foreach</span>($fileArr <span class="keyword">as</span> $_file) &#123;</span><br><span class="line">        <span class="keyword">if</span>(file_exists($_file)) &#123;</span><br><span class="line">          $validFiles[] = $_file;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span>(count($validFiles)) &#123;</span><br><span class="line">      $zip = <span class="keyword">new</span> ZipArchive();</span><br><span class="line">      <span class="keyword">if</span>($zip-&gt;open($destination, $overWrite ? ZIPARCHIVE::OVERWRITE : ZIPARCHIVE::CREATE) !== <span class="keyword">TRUE</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">foreach</span>($validFiles <span class="keyword">as</span> $_file) &#123;</span><br><span class="line">        $zip-&gt;addFile($_file, $_file);</span><br><span class="line">      &#125;</span><br><span class="line">      $zip-&gt;close();</span><br><span class="line">      <span class="keyword">return</span> file_exists($destination);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP代码规范</title>
      <link href="/2019/10/28/PHP%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/"/>
      <url>/2019/10/28/PHP%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h4>外部接口</h4><ol><li><p>接口名：</p><ol><li>统一为小驼峰式，第一个单词的首字母小写，其余首个单词字母大写；</li><li>英文单词，不要用拼音，更不能中西结合；</li><li>意义明确，动宾结构，比如：getList，showMenu，addProduct，DelStore等；</li><li>如果是获取一条数据，用One区分，如getOneStaffInfo；如果是获取多条数据，用List区分，如GetStaffInfoList；</li></ol></li><li><p>Ajax参数：</p><ol><li><p>命名</p><ol><li>统一为小驼峰式，第一个单词的首字母小写，其余首个单词字母大写；</li><li>英文单词，不要用拼音，更不能中西结合；</li><li>意义明确，如门店ID，优先使用storeId，然后是sid，不能直接就是一个id；</li></ol></li><li><p>默认值</p><ol><li>尽量都要写上默认值；</li><li>接收参数的类型，要与方法的请求方式保持一致；</li><li>接收参数的变量过滤，暂定写在默认值后面，如<code>I(&#39;post.count&#39;, &#39;&#39;, &#39;int&#39;);</code></li><li>默认值要与参数类型一致，如<code>I(&#39;post.count&#39;, &#39;&#39;, &#39;int&#39;);</code>这种已经限制是int型了，后面默认值给空字符串，很奇怪；</li></ol></li><li><p>在接收值的同时进行参数的处理，建议分开，如</p><p><code>$start = I(&#39;post.start&#39;, &#39;&#39;, &#39;string&#39;);</code></p><p><code>$startTs = strtotime($start);</code></p></li><li><p>在接受参数后，需要进行必要的判断，一般包括参数完整性，参数正确性和用户权限判断(提前判断过的忽略此判断)；</p></li><li><p>尽量不要在方法里出现数据库字段 — 如果参数数量大于5，可用数组[‘字段’]这种方式处理；</p></li></ol></li><li><p>请求方式：</p><ol><li>我们最常用的是GET/POST；</li><li>query即查询类的接口，采用GET方式请求；</li><li>execute即增删改类对数据库操作的接口，采用POST方式；</li><li>此外，如果GET参数太长，也可采用POST作为替代；</li></ol></li><li><p>返回形式：</p><ol><li>error为状态码，类型为number</li><li>biz为接口信息，类型为string</li><li>msg为返回数据，类型可为string、object等，视具体情况而定；<ol><li>当msg为object等其他带有多字段返回时，需要写明白里面的各个参数怎么用，如状态state，需要写明白每个状态值的描述</li><li>数组：多条同类数据采用；类似列表接口；如果需要分页，将数据包在list内，将记录数包在total内；</li><li>对象：单条数据；类似详情接口；</li><li>数据格式<ol><li>暂规定分页total、数量count、数字id等，在返回前加上强制类型转换intval；</li><li>不要把数据库字段直接返回给前端，需要在数据返回前做一次映射；</li></ol></li></ol></li></ol></li><li><p><strong>对外接口</strong></p><ol><li><p><strong>参数一旦确定就不要轻易更改，如果有更改，要及时通知前端</strong></p></li><li><p><strong>文件名与类名要完全相同为大驼峰</strong></p></li><li><p><strong>一般若无特殊需求，默认一个文件只声明一个类</strong></p></li><li><p><strong>尽量做到功能性专一，不要在一个方法里实现多个功能；</strong></p><p>​</p></li></ol></li></ol><h4>内部函数</h4><ol><li><p>函数名：包括公共函数function、行为方法Behaviors、内部方法Service和内部方法Model。</p><ol><li>统一为小驼峰式，第一个单词的首字母小写，其余首个单词字母大写；</li><li>英文单词，不要用拼音，更不能中西结合；</li><li>意义明确，动宾结构，比如：getList，showMenu，addProduct，DelStore等；</li><li>如果是获取一条数据，用One区分，如getOneStaffInfo；如果是获取多条数据，用List区分，如GetStaffInfoList；</li></ol></li><li><p>变量名：包括方法内变量、循环内变量和特殊变量</p><ol><li>方法内变量，采用小驼峰式；</li><li>循环内变量，采用 _ 小驼峰式；</li><li>特殊变量，Service为$s_Service名，如 $s_photo；Model为$m_Model名，如$m_photo；</li></ol></li><li><p>常量：</p><ol><li>全大写，用_分隔；</li><li>写在类的最上方，与第一个方法空一行；</li><li>如果是全局的常量，写在conf文件夹的配置中；</li></ol></li><li><p>公、私有方法界定：</p><ol><li>公有方法<ol><li>即public方法，一般需供其他类方法进行调用；</li><li>命名：小驼峰式</li></ol></li><li>私有方法<ol><li>即private方法，仅在自己类中被调用，服务于类内部，一般为类方法中提取的重复性代码;</li><li>命名：以下划线开头的小驼峰式，如：<code>private function _getInfoList ()</code></li></ol></li><li>以后写方法的时候，要写明白是public还是private；</li></ol></li><li><p>公共函数：不用声明对象即可调用的函数</p><ol><li>即common内的function文件，里面放着许多可直接调用的函数，包括截取字符串等函数；</li><li>可自行添加公共函数(全局抽象代码)；</li></ol></li><li><p>CSMV各层方法界定：Controller、Service、Model、View</p><ol><li>Controller即控制器，为连接前端与后端的纽带，它只做简单的参数接收、参数判断、参数处理和数据的返回；</li><li>Service即服务层，为主要的业务逻辑层，它根据Controller所传参数进行业务逻辑上面的处理并将处理后的结果返回给Controller；Service只允许进行DB一步操作【即一个箭头的操作】；</li><li>Model即数据库层，为基础的数据库操作层，它根据Service所传参数对数据库进行增删改查等操作；</li><li>View即视图层，为用户所看到的界面显示层，此层多为前端使用</li><li><strong>各层方法均要功能性专一</strong></li></ol></li><li><p>异常处理：</p><ol><li>try catch为正规的异常处理方法；</li><li>现处理方法是手动对代码执行结果判断，根据判断的结果，向Controller返回状态码和错误信息等数据；</li><li>暂定采用手动判断返回的异常处理方法</li></ol></li><li><p><strong>内部函数</strong></p><ol><li><p><strong>不要在循环内取session值</strong></p></li><li><p><strong>不要在循环内取配置值</strong></p></li><li><p><strong>尽量不要在循环内使用SQL语句</strong></p></li><li><p><strong>每个代码块之间空一行，特别是Service里的代码</strong></p><p>​</p></li></ol></li></ol><h4>代码格式</h4><ol><li><p>空格</p><ol><li>函数名与后面的圆括弧间空一格，如<code>public function getOneCache () {</code>；</li><li>原括弧内的各个参数逗号后空一格，如<code>getCserPhoto ($taker, $page, $pageSize)</code>；</li><li>原括弧与后面的左大括弧在同一行，且空一格，如<code>public function getOneCache () {</code>；</li><li>函数体内调用的方法不要与后面的原括弧空一格，如<code>$s_cker-&gt;getCserPhoto($taker, $page);</code>；</li><li>赋值操作符、逻辑操作符、等号操作符、关系运算符、按位操作符左右各有一个空格；</li></ol></li><li><p>空行</p><ol><li><p>左大括弧与下面的代码间不要空一行，如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getOneCache</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">$key = I(<span class="string">'post.key'</span>, <span class="string">''</span>);</span><br></pre></td></tr></table></figure></li><li><p><code>&lt;?php</code>与命名空间中间不空，命名空间namespace和导入use间空一行，导入use和声明class间空一行</p></li><li><p>如果 return 语句之前的代码块超过3行，return 语句之前需要空行；如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$arr[<span class="string">'name'</span>] = $val[<span class="string">'P_Name'</span>];</span><br><span class="line">$arr[<span class="string">'age'</span>] = $val[<span class="string">'P_Age'</span>];</span><br><span class="line">$arr[<span class="string">'sex'</span>] = $val[<span class="string">'P_Sex'</span>];</span><br><span class="line">$arr[<span class="string">'state'</span>] = $val[<span class="string">'P_State'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $arr;</span><br></pre></td></tr></table></figure></li><li><p>php文件的结束标签统一不写，在最后加一行空行即可；</p><ol><li>PHP 结束标签 <strong>?&gt;</strong> 对于 PHP 解析器来说是可选的，但是只要使用了，结束标签之后的空格，有可能会导致不想要的输出，这个空格可能是由开发者或者用户又或者 FTP 应用程序引入的，甚至可能导致出现 PHP 错误，如果配置了不显示 PHP 错误，就会出现空白页面。基于这个原因， 所有的 PHP 文件将不使用结束标签，而是以一个空行代替。</li></ol></li></ol></li><li><p>注释</p><ol><li>类注释统一采用<code>/**/</code>格式，写明类的用途，作者，版本，时间等，具体参考phpDocumentor；</li><li>方法注释、变量注释、逻辑注释采用<code>//</code>格式，<code>//</code>与后面的注释内容空一格,如<code>// 指定键查询缓存</code>；</li><li>为便于寻找，建议方法注释的内容前面加上[前端模块名]，如<code>// [抽查中心-修片审核抽查]获取当天数据</code>；<strong>优先是一个前端模块对应一个控制器；</strong></li></ol></li><li><p>数组</p><ol><li><p>数组统一用<code>[]</code>代替<code>array()</code>写法；</p></li><li><p>只有一个键值对时，写成一行；如<code>$arr = [&#39;name&#39; =&gt; &#39;fox&#39;];</code></p></li><li><p>有两个或以上键值对时，换行；如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$arr = [</span><br><span class="line"><span class="string">'name'</span> =&gt; <span class="string">'fox'</span>,</span><br><span class="line"><span class="string">'age'</span> =&gt; <span class="number">25</span>,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>​</p></li></ol></li></ol><h4>数据库</h4><ol><li>数据表：<ol><li>表名采用<code>hmt_account_workload</code>格式，前缀_全小写单词；</li><li>注释，即建表的comment，不可省略，要写明是什么表；</li><li>采用Innodb引擎；</li><li>默认必有主键、创建时间等字段。如果数据存在更新需求，还需要有更新时间字段；</li></ol></li><li>字段：<ol><li>字段名采用<code>AW_StaffType</code>格式，全大写表名首字母_大驼峰</li><li>类型：<ol><li>常用的数字类为int11，时间类为int11，状态类为tinyint<ol><li>tinyint范围为-127～127，size只表示显示的宽度，最大值取3；</li></ol></li><li>一般int/tinyint型字段若无特殊要求，均加上unsigned属性；</li><li>其他的varchar和text型视具体情况而定，一般text格式的会分表；</li><li>尽量少的使用text型</li></ol></li><li>注释：即comment内容，注释必须要写清楚</li></ol></li><li>缓存：<ol><li>现使用Memcached缓存；</li><li>key暂定为：项目缩写_ 明确意义单词_其他必要参数；</li><li>项目的不同采用不同的前缀：HIMO_   KIDS_   CLOUD_   OA_等；</li><li>过期时间，一般设置为3600s；短时间的设置为180s～300s，具体依照需求安排；</li></ol></li><li><strong>数据库</strong><ol><li><strong>使用数据库可视化软件时，请确保已设置每页最大记录数为100左右；</strong></li><li><strong>需要进行SQL操作执行时，请现在测试库执行一遍，确保没有问题，再在只读库或者线上库执行；</strong></li><li><strong>需要在线上库添加字段时，请在SQL后加上<code>AFTER 字段</code>，指定字段添加的位置；</strong></li><li><strong>字段属性，没有特殊情况，都是NOT NULL</strong></li><li><strong>不写字段备注的都是耍流氓！</strong></li></ol></li></ol><h4>文档</h4><ol><li><p>归属项目：</p><ol><li>现在有HIMO两个，KIDS两个，云图一个，OA一个，营销一个共7个项目，按照道理应该是一个项目对应一个文档。没有特殊理由，不要创建其他的文档；</li></ol></li><li><p>归属模块：</p><ol><li>一般项目内有几个模块就新建几个模块，不要把不同模块的接口文档写在一起；</li></ol></li><li><p>分类名：</p><ol><li>现暂定分类名为视图可见的一级菜单名；</li></ol></li><li><p>接口名：</p><ol><li>现暂定为【二级菜单】接口功能名，如<code>【修片审核抽查】抽取</code>；</li></ol></li><li><p>文档内容：</p><ol><li>添加接口后，右侧表格从上往下填写清楚，不需要的不填，但是需要的要填写清楚；</li><li>请求方法写明白是GET还是POST；</li><li>请求地址为：/控制器名/方法名，注意别用中文符号；</li><li>接口描述，如果接口内容较多，可在此进行简单的介绍；</li><li>发送数据：<ol><li>名称要有意义</li><li>是否必须</li><li>参数类型</li><li>默认值</li><li>描述，一定要写清楚，如果是状态参数，要在描述里面写明白各个状态对应的值</li></ol></li><li>返回参数：<ol><li>error为状态码，类型为number<ol><li>状态码：<ol><li>返回成功的状态码为0；</li><li>异常的状态码：<ol><li>400 未登录、未授权</li><li>401 参数缺失</li><li>403 参数错误，如规定参数范围是0-9，传值是11；</li><li>404 数据不存在，指在修改数据时，检查不存在。如果是获取数据时，不存在即为空数组、空对象，状态码为0</li><li>500服务器错误(数据库添加、删除等错误)；</li></ol></li></ol></li></ol></li><li>biz为接口信息，类型为string</li><li>msg为返回数据，类型可为string、object等，视具体情况而定；当msg为object时，需要写明白里面的各个参数，参照接口参数的要求写清楚；</li></ol></li><li>示例数据：<ol><li>标准的返回数据格式示例；</li><li>有时候也把一些复杂参数放到这里进行一定的解释说明；</li></ol></li></ol><p>​</p></li></ol><h4>测试环境</h4><ol><li>PHP环境：lamp环境，确保前后端的测试环境及本地配置一致；</li><li>数据库环境：供后端测试使用<ol><li>及时清理脏数据；</li><li>账号相关的表不要乱动；</li><li>自己建的表自己整理；</li></ol></li><li>一致性：本地环境、测试环境、线上环境尽可能的保持一致</li></ol><h4>其他</h4><ol><li>不要使用php的短标记，即<code>&lt;? &gt;</code>，防止服务器不支持；</li><li>第三方的SDK<ol><li>一般存放在Vendor目录中；</li><li>导入方法选择vendor</li><li>SDK携带的示例代码不要保留</li></ol></li></ol><h2>附录</h2><p>代码示例1：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// [抽查中心-修片审核抽查]通过</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">passCserPhoto</span> <span class="params">($taker, $id, $csGrass, $csNote)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 判断照片是否是此人抽查</span></span><br></pre></td></tr></table></figure><p>代码示例2:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!$photoCheckChangeRes) &#123;</span><br><span class="line"><span class="keyword">self</span>::$lastErrorCode = <span class="number">500</span>;</span><br><span class="line">  <span class="keyword">self</span>::$lastError = <span class="string">'系统繁忙,请稍后再试'</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码示例3:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (in_array($_photo[<span class="string">'CP_Id'</span>], $plantData)) &#123;</span><br><span class="line">$returnData[<span class="string">'floatExp'</span>] += $_exp;</span><br><span class="line">&#125; <span class="keyword">elseif</span> (in_array($_photo[<span class="string">'CP_Id'</span>], $weedData)) &#123;</span><br><span class="line">$returnData[<span class="string">'floatExp'</span>] -= $_exp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码示例4:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 前端传参</span></span><br><span class="line">$start = I(<span class="string">'post.start'</span>, <span class="string">''</span>, <span class="string">'string'</span>);</span><br><span class="line">$end = I(<span class="string">'post.end'</span>, <span class="string">''</span>, <span class="string">'string'</span>);</span><br><span class="line">$csGrass = I(<span class="string">'post.csGrass/d'</span>, <span class="number">0</span>, <span class="string">'int'</span>);</span><br><span class="line">$glid = I(<span class="string">'post.glid'</span>, <span class="number">0</span>, <span class="string">'int'</span>);</span><br><span class="line">$page = I(<span class="string">'post.page/d'</span>, <span class="number">1</span>, <span class="string">'int'</span>);</span><br><span class="line">$pageSize = I(<span class="string">'post.pageSize/d'</span>, <span class="number">10</span>, <span class="string">'int'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 参数判断</span></span><br><span class="line"><span class="keyword">if</span> (!$start || !$end) &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;sendAjax(<span class="number">406</span>, <span class="string">'CKER_GETCSERPHOTORECORD'</span>, <span class="string">'关键信息不可为空'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 参数转换</span></span><br><span class="line">$startTs = strtotime($start);</span><br><span class="line">$endTs = strtotime($end) + <span class="number">86399</span>;</span><br><span class="line"></span><br><span class="line">$s_cker = D(<span class="string">'Cker'</span>, <span class="string">'Service'</span>);</span><br><span class="line">$recordRes = $s_cker-&gt;getCserPhotoRecord($startTs, $endTs, $csGrass, $glid, $page, $pageSize);</span><br><span class="line"><span class="keyword">if</span> (!$recordRes) &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;sendAjax($s_cker::$lastErrorCode, <span class="string">'CKER_GETCSERPHOTORECORD'</span>, $s_cker::$lastError);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;sendAjax(<span class="number">0</span>, <span class="string">'CKER_GETCSERPHOTORECORD'</span>, $recordRes);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL中的NULL和NOT NULL区别</title>
      <link href="/2019/10/28/MySQL%E4%B8%AD%E7%9A%84NULL%E5%92%8CNOT-NULL%E5%8C%BA%E5%88%AB/"/>
      <url>/2019/10/28/MySQL%E4%B8%AD%E7%9A%84NULL%E5%92%8CNOT-NULL%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>首先，我们来看看空值和NULL值的区别：</p><ol><li><p>空值是不占用空间的</p></li><li><p>NULL值是占用空间的，下面是来自于MYSQL官方的解释：</p><p><code>“NULL columns require additional space in the row to record whether their values are NULL. For MyISAM tables, each NULL column takes one bit extra, rounded up to the nearest byte.”</code></p></li></ol><p>搞清楚空值和NULL值的概念之后，我们做个例子测试一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE  `php` (  </span><br><span class="line">`col1` VARCHAR( 10 ) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL ,  </span><br><span class="line">`col2` VARCHAR( 10 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL  </span><br><span class="line">) ENGINE = MYISAM ;</span><br></pre></td></tr></table></figure><p>插入数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO `php` VALUES (null,1);</span><br></pre></td></tr></table></figure><p>mysql发生错误：</p><p><code>#1048 - Column &#39;col1&#39; cannot be null</code></p><p>再来一条：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO `php` VALUES (&apos;&apos;,1);</span><br></pre></td></tr></table></figure><p>成功插入。</p><p>可见，NOT NULL 的字段是不能插入NULL的，只能插入空值。</p><p>然后：NULL 其实并不是空值，而是要占用空间，所以mysql在进行比较的时候，NULL 会参与字段比较，所以对效率有一部分影响。</p><h6 id="而且B树索引时不会存储NULL值的，所以如果索引的字段可以为NULL，索引的效率会下降很多。"><a href="#而且B树索引时不会存储NULL值的，所以如果索引的字段可以为NULL，索引的效率会下降很多。" class="headerlink" title="而且B树索引时不会存储NULL值的，所以如果索引的字段可以为NULL，索引的效率会下降很多。"></a>而且B树索引时不会存储NULL值的，所以如果索引的字段可以为NULL，索引的效率会下降很多。</h6><p>我们再向phpernote的表中插入几条数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO `php` VALUES (&apos;&apos;, NULL);</span><br><span class="line">INSERT INTO `php` VALUES (&apos;1&apos;, &apos;2&apos;);</span><br></pre></td></tr></table></figure><p>现在根据需求，我要统计phpernote表中col1不为空的所有数据，我是该用“&lt;&gt; ‘’” 还是 “IS NOT NULL” 呢，让我们来看一下结果的区别。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM `phpernote` WHERE col1 IS NOT NULL;</span><br><span class="line"></span><br><span class="line">SELECT * FROM `phpernote` WHERE col1 &lt;&gt; &apos;&apos;;</span><br></pre></td></tr></table></figure><p>可以看到，结果迥然不同，所以在实际情况中，我们一定要根据业务需求，搞清楚是否需要使用NULL或者NOT NULL。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL中常用的语句</title>
      <link href="/2019/10/28/MySQL%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AF%AD%E5%8F%A5/"/>
      <url>/2019/10/28/MySQL%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<p>由于经常跟数据库打交道，但又不是正宗的DBA。有些使用次数较多的SQL语句却也记得不甚牢靠，所以下面就列出本人常用到的一些SQL语句，权当笔记了。</p><ol><li><p>添加一个字段，并指定字段位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE `表名` ADD `字段名` VARCHAR(50) NOT NULL  DEFAULT &apos;&apos;  COMMENT &apos;&apos; AFTER `字段`;</span><br></pre></td></tr></table></figure></li><li><p>添加多个字段，并指定字段位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE `表名` ADD (</span><br><span class="line">  `字段名1` VARCHAR(50) NOT NULL  DEFAULT &apos;&apos;  COMMENT &apos;&apos;,</span><br><span class="line">  `字段名2` INT NOT NULL  DEFAULT 0  COMMENT &apos;&apos;,</span><br><span class="line">  `字段名3` VARCHAR(50) NOT NULL  DEFAULT &apos;&apos;  COMMENT &apos;&apos;,</span><br><span class="line">  ) AFTER &apos;字段名&apos;; -- AFTER只能放在语句最后</span><br></pre></td></tr></table></figure></li><li><p>更改一个字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE `表名` CHANGE `字段名` `字段名` INT(10)  UNSIGNED  NOT NULL  DEFAULT &apos;0&apos;  COMMENT &apos;&apos; AFTER `字段;</span><br></pre></td></tr></table></figure></li><li><p>删除一个字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE `表名` DROP `字段名`;</span><br></pre></td></tr></table></figure></li><li><p>获取不重复的字段值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT `字段名` FROM TABLE; -- DISTINCT关键字只能返回目标字段的值</span><br></pre></td></tr></table></figure></li><li><p>获取条件字段为NULL的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT FROM `表名` WHERE `字段名` IS NULL;</span><br></pre></td></tr></table></figure></li><li><p>添加索引</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE `表名` ADD PRIMARY KEY (`字段名1`); -- 主键索引</span><br><span class="line">ALTER TABLE `表名` ADD UNIQUE (`字段名1`); -- 唯一索引</span><br><span class="line">ALTER TABLE `表名` ADD INDEX (`字段名1`); -- 普通索引</span><br><span class="line">ALTER TABLE `表名` ADD FULLTEXT (`字段名1`); -- 全文索引</span><br><span class="line">ALTER TABLE `表名` ADD INDEX (`字段名1`, `字段名2`, `字段名3`); -- 多列索引</span><br></pre></td></tr></table></figure><p>​</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL中字段拼接的三种方法</title>
      <link href="/2019/10/28/MySQL%E4%B8%AD%E5%AD%97%E6%AE%B5%E6%8B%BC%E6%8E%A5%E5%87%BD%E6%95%B0/"/>
      <url>/2019/10/28/MySQL%E4%B8%AD%E5%AD%97%E6%AE%B5%E6%8B%BC%E6%8E%A5%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<ol><li><p>+符号</p><p>使用此种方法时，MySQL会尝试将加号两端的字段值转成数字型，如果转换失败，则认为字段值为0。</p><p>比如下面的SQL：</p><p><code>SET user age=age+1 where name=&#39;huli&#39;</code></p><p>它的执行结果为(原age=25)：</p><p><code>age:26</code></p></li><li><p>CONCAT函数</p><p>CONCAT函数支持一个或者多个参数，参数类型可以为字符串类型，也可以是非字符串类型，对于非字符串类型的参数，MySQL会尝试将其转化为字符串类型，CONCAT函数会将所有参数按照参数的顺序拼接称一个字符串作为返回值。</p><p>比如下面的SQL：</p><p><code>CONCAT(&#39;花名是&#39;,name,&#39;的员工的性别是&#39;,sex)</code></p><p>它的执行结果为：</p><p><code>花名是狐狸的员工的性别是男</code></p><p><code>花名是地鼠的员工的性别是女</code></p></li><li><p>CONCAT_WS函数</p><p>CONCAT_WS是MySQL提供的另一个进行字符串拼接的函数。CONCAT_WS可以在待拼接的字符串之间加入指定的分隔符，它的第一个参数值为采用的分隔符，而剩下的参数则作为待拼接的字符串值。</p><p>比如下面的SQL：</p><p><code>CONCAT_WS(&#39;@&#39;,id,name,sex,age) FROM user</code></p><p>它的执行结果为：</p><p><code>1001@狐狸@男@25</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker初识</title>
      <link href="/2019/10/28/Docker%E5%88%9D%E8%AF%86/"/>
      <url>/2019/10/28/Docker%E5%88%9D%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h3>Docker初识</h3><h4>什么是Docker？</h4><p>Docker是一个开源的引擎，可以轻松的为任何应用创建一个轻量级的、可移植的、自给自足的容器。开发者在笔记本上编译测试通过的容器可以批量地在生产环境中部署，包括VMS(虚拟机)、bare metal、openstack集群和其他的基础应用平台</p><h4>Docker使用场景？</h4><p>web应用的自动化打包和发布</p><p>自动化测试和持续集成、发布</p><p>在服务型环境中部署和调整数据库或其他的后台应用</p><p>从头编译或者扩展现有的openshift或cloud foundry平台来搭建自己的paas环境。</p><h4>Docker的架构？</h4><p>Docker使用客户端-服务器(C/S)架构模式，使用远程API来管理和创建Docker容器通过Docker镜像来创建</p><p>容器与镜像的关系类似于面向对象编程中的对象与类</p><p>clients — 客户端</p><p>hosts — 主机</p><p>registries — 仓库</p><p>daemon — 守护进程、后台程序</p><p>container — 容器</p><p>image — 镜像</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MAC下文件夹英文名汉化</title>
      <link href="/2019/10/28/MAC%E4%B8%8B%E6%96%87%E4%BB%B6%E5%A4%B9%E8%8B%B1%E6%96%87%E5%90%8D%E6%B1%89%E5%8C%96/"/>
      <url>/2019/10/28/MAC%E4%B8%8B%E6%96%87%E4%BB%B6%E5%A4%B9%E8%8B%B1%E6%96%87%E5%90%8D%E6%B1%89%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>首先，声明一下，这个不是必要的，纯属个人的强迫症。</p><img src="/Users/huli/Pictures/41501993832_.jpg" style="zoom:50%" /><p>就像上面这样的情况，可以把test文件夹更改成测试，同时其路径依然是使用的test</p><p>下面放上具体操作：</p><ol><li><p>获取系统权限：</p><p><code>csrutil disable</code></p></li><li><p>修改文件权限：</p><p><code>cd /System/Library/CoreServices/SystemFolderLocalizations/zh_CN.lproj</code></p><p><code>sudo chmod -R 777</code></p><p><code>open .</code></p></li><li><p>打开文件：</p><p><code>SystemFolderLocalizations.strings</code></p></li><li><p>文件转码：</p><p><code>plutil -convert json SystemFolderLocalizations.strings # 转化为JSON文件</code></p><p><code>plutil -convert xml1 SystemFolderLocalizations.strings # 转化为XML文件</code></p></li><li><p>根据文件类型添加自己需要的一个中/英文键值对：</p><p><code>JSON类型：{&quot;Desktop&quot;: &quot;桌面&quot;}</code></p><p><code>XML类型：&lt;key&gt;Desktop&lt;/key&gt; &lt;string&gt;桌面&lt;/string&gt;</code></p></li><li><p>文件转回：</p><p><code>plutil -convert binary1 SystemFolderLocalizations.strings</code></p></li><li><p>到需要更改的目录下执行命令：</p><p><code>touch .localized</code> </p></li><li><p>重启Finder：</p><p><code>pkill Finder</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
